import { API } from "@/helpers/axios";
import { isAuthticated } from "@/helpers/isAuthenticated";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { toast } from "react-toastify";
import PaginatedItems from "@/components/Pagination";

const Dashboard = ({ itemsPerPage }) => {
  const [orders, setOrders] = useState(null);
  const [loading, setLoading] = useState(false);

  const router = useRouter();

  const fetchOrders = async () => {
    const BASE_URL = process.env.BASE_URL;
    setLoading(true);

    try {
      const response = await API.get(`${BASE_URL}/order_items`);
      setOrders(response?.data?.data);

      setLoading(false);
    } catch (error) {
      setLoading(false);
      toast.error(error.response?.data?.error);
      console.log(error);
    }
  };

  useEffect(() => {
    !isAuthticated() && router.replace("/");
  }, []);

  useEffect(() => {
    fetchOrders();
  }, []);

  const logout = () => {
    localStorage.clear("token");
    router.replace("/");
  };

  return (
    <>
      <Head>
        <title>Dashboard | Unshelled </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen items-center justify-center p-10">
        {orders && orders?.length > 1 ? (
          <div className="md:max-w-[90%] mx-auto">
            <div className="flex justify-between mb-4">
              <h1 className="font-bold text-2xl mb-4">
                All your orders
                <span className="text-sm font-light ml-3 italic"> {orders?.length} orders in total </span>
              </h1>
              <button className="btn rounded-none" onClick={logout}>
                Logout
              </button>
            </div>

            <p className="mb-5 italic font-light">NB: Click on the order id to see full order details </p>

            <PaginatedItems itemsPerPage={5} items={orders} />
          </div>
        ) : (
          <p>Loading...</p>
        )}
      </main>
    </>
  );
};

export default Dashboard;
